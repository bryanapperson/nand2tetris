// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    // Put your code here:
    // Fan out the load value by address so it is 0 where it is not addressed
    DMux8Way(in=load, sel=address, a=loada, b=loadb, c=loadc, d=loadd, e=loade, f=loadf, g=loadg, h=loadh);
    Register(in=in, out=aout, load=loada);
    Register(in=in, out=bout, load=loadb);
    Register(in=in, out=cout, load=loadc);
    Register(in=in, out=dout, load=loadd);
    Register(in=in, out=eout, load=loade);
    Register(in=in, out=fout, load=loadf);
    Register(in=in, out=gout, load=loadg);
    Register(in=in, out=hout, load=loadh);
    Mux8Way16(sel=address, out=out, a=aout, b=bout, c=cout, d=dout, e=eout, f=fout, g=gout, h=hout);
}
